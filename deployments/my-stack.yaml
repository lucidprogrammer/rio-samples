template:
  goTemplate: true
  envSubst: true
  questions:
    - variable: NAMESPACE
      description: "namespace to deploy to"
    - variable: REVISION
      description: "Current commit"
    # make sure you respect the type of the variable used.
    - variable: MAX_SCALE
      type: "int"
      description: "maximum scale number"
services:
  web1:
    version: v0
    weight: 100
    stageOnly: false
    autoscale:
      concurrency: 10
      maxReplicas: ${MAX_SCALE}
      minReplicas: 1
    ports:
    - 80:3000/http
    env:
    - NAMESPACE=${NAMESPACE}
    # say you want to have a way to show the version/commit in your application.
    - REVISION=${REVISION}
    # let's say you want to access a super secret as env, you may do as follows
    # - REDIS_PASSWORD=secret://spec/REDIS_PASSWORD
    build:
      branch: master
      context: ./src/web1
      pushRegistry: docker.io
      # everytime you do a push to the repo, REVISION will match the specific commit hash and an image is created and pushed.
      imageName: lucidprogrammer/web1:${REVISION}
  
  # an example to use init containers
  web2:
    version: v0
    weight: 100
    ports:
    - 80:80/http
    image: nginx:alpine
    volumes:
    - name: html
      path: /usr/share/nginx/html
    containers:
    - init: true
      name: web2-init
      image: busybox
      volumes:
      - name: html
        path: /work-dir
      command:
        - wget
        - "-O"
        - "/work-dir/index.html"
        - http://kubernetes.io


    


     
